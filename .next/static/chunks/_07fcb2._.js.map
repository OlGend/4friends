{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/LoaderMini/LoaderMini.jsx"],"sourcesContent":["import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <figure>\n              <div className=\"dot white\"></div>\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n              <div className=\"dot\"></div>\n            </figure>\n          </div>\n    );\n};\n\nexport default Loader;"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,SAAS;IACX,qBACI,wLAAC;QAAI,WAAU;kBACX,cAAA,wLAAC;;8BACC,wLAAC;oBAAI,WAAU;;;;;;8BACf,wLAAC;oBAAI,WAAU;;;;;;8BACf,wLAAC;oBAAI,WAAU;;;;;;8BACf,wLAAC;oBAAI,WAAU;;;;;;8BACf,wLAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAI7B;KAZM;uCAcS"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/withdrawal/page.tsx"],"sourcesContent":["\"use client\"\nimport { useState, useEffect } from \"react\";\n\nimport LoaderMini from \"@/components/LoaderMini/LoaderMini\";\n\n\nimport Link from \"next/link\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport Select from \"react-select\";\n\nconst Withdraw = () => {\n  const { t } = useTranslation();\n\n \n\n\n\n\n  const [adressPayment, setAdressPayment] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState([]);\n  const [coins, setCoins] = useState(null);\n  const [token, setToken] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [errorWallet, setErrorWallet] = useState(false);\n  // const [minimumAmount, setMinimumAmount] = useState(\"\");\n  const [minFee, setMinFee] = useState(\"\");\n\n  const [error, setError] = useState(false);\n\n  const [message, setMessage] = useState(\"\");\n\n  const api = \"https://pickbonus.myawardwallet.com/api\";\n  const apiKey = \"MG5SRC6-HFBMACK-MMSR9QW-1EST6QC\";\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const urlParams = new URLSearchParams(window.location.search);\n        const idUserParam = urlParams.get(\"keyword\");\n        const res = await fetch(`${api}/user/read_one.php?id=${idUserParam}`);\n        if (res.ok) {\n          const userData = await res.json();\n          setUser(userData);\n        } else {\n          console.error(\"Failed to fetch user data:\", res.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching user data:\", error);\n      }\n    };\n\n    const fetchCoins = async () => {\n      try {\n        const myHeaders = new Headers();\n        myHeaders.append(\"x-api-key\", apiKey);\n\n        const requestOptions = {\n          method: \"GET\",\n          headers: myHeaders,\n          redirect: \"follow\",\n        };\n\n        const response = await fetch(\n          \"https://api.nowpayments.io/v1/merchant/coins\",\n          requestOptions\n        );\n\n        if (response.ok) {\n          const result = await response.json();\n          setCoins(result);\n        } else {\n          console.error(\"Failed to fetch coins data:\", response.status);\n          // setError(true);\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching coins data:\", error);\n        // setError(true);\n      }\n    };\n\n    fetchUser();\n    fetchCoins();\n  }, [api]);\n\n\n  ///////////////////////ЗАПРОС НА СУЩЕСТВОВАНИЕ КОШЕЛЬКА///////////////////////////\n  const validateAddress = async () => {\n    try {\n      const url = \"https://api.nowpayments.io/v1/payout/validate-address\";\n      const currency = selectedPaymentMethod;\n      const address = adressPayment;\n\n      const myHeaders = new Headers();\n      myHeaders.append(\"x-api-key\", apiKey);\n      myHeaders.append(\"Content-Type\", \"application/json\");\n\n      const data = {\n        address: address,\n        currency: currency,\n      };\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(data),\n        redirect: \"follow\",\n      };\n\n      const response = await fetch(url, requestOptions);\n\n      if (response.ok) {\n        setErrorWallet(false);\n        handlePayoutRequest();\n      } else {\n        console.error(\"Failed to validate address:\", response.status);\n        const text = await response.text();\n        console.log(\"Response text:\", text);\n        setErrorWallet(true);\n      }\n    } catch (error) {\n      console.error(\"An error occurred during address validation:\", error);\n      setErrorWallet(true);\n    }\n  };\n  ///////////////////////////////////////////////////////////////////////\n\n  const phpScriptUrl =\n    ////////////////////////////////ЗАПРОС НА ВЫПЛАТУ////////////////////////////////\n\n    \"https://pickbonus.myawardwallet.com/api/payment/payment.php\";\n\n  const handlePayoutRequest = async () => {\n    try {\n      setLoading(true);\n      const apiKey = \"MG5SRC6-HFBMACK-MMSR9QW-1EST6QC\";\n      const jwtToken = await authenticateUser(); // Получаем новый токен перед каждым запросом\n      console.log(\"JWT\", jwtToken);\n\n      const myHeaders = new Headers();\n      myHeaders.append(\"x-api-key\", apiKey);\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"Authorization\", `Bearer ${jwtToken}`);\n\n      const payoutData = {\n        ipn_callback_url: \"https://nowpayments.io\",\n        withdrawals: [\n          {\n            address: adressPayment,\n            currency: selectedPaymentMethod,\n            amount: parseFloat(estimated.estimated_amount),\n            ipn_callback_url: \"https://nowpayments.io\",\n            userData: user,\n            userWithdraw: withdrawalRequestValue,\n          },\n        ],\n      };\n      console.log(\"type\", user);\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify({ ...payoutData }), // Добавляем токен к данным\n        redirect: \"follow\",\n      };\n\n      const response = await fetch(phpScriptUrl, requestOptions);\n\n      if (response.ok) {\n        const result = await response.text();\n\n        setErrorMin(t(\"Withdrawal successful\"));\n\n        setModalError(!modalError);\n        setModalPayout(!modalPayout);\n      } else {\n        if (response.status === 400) {\n          const result = await response.json();\n          console.error(\"Failed to make payout request:\", result.error);\n          // Тут ви можете вивести повідомлення про помилку користувачу\n          // setError(true);\n          // setErrorMessage(result.error);\n          setMessage(result.error);\n        } else if (response.status === 500) {\n          console.error(\n            \"Failed to make payout request:\",\n            \"Internal Server Error\"\n          );\n          // Тут ви можете вивести інше повідомлення про помилку користувачу\n          // setError(true);\n          // setErrorMessage(\"Internal Server Error\");\n          setShowModal(true);\n          setMessage(\"Internal Server Error\");\n        } else {\n          console.error(\"Failed to make payout request:\", response.status);\n          // setError(true);\n          setShowModal(true);\n\n          setMessage(`Error: ${response.status}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error during payout request:\", error);\n      // setError(true);\n      setShowModal(true);\n      setMessage(\"Insufficient balance for withdrawal\");\n    } finally {\n      setLoading(false); // Выключить лоадер вне зависимости от результата запроса\n    }\n  };\n  ///////////////////////////////////////////////////////\n\n  ////////////////////ПОЛУЧЕНИЕ ТОКЕНА/////////////\n\n  const authenticateUser = async () => {\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n\n      const raw = JSON.stringify({\n        email: \"and@karmabs.com\",\n        password: \"Ytvn3daw!\",\n      });\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\",\n      };\n\n      const authResponse = await fetch(\n        \"https://api.nowpayments.io/v1/auth\",\n        requestOptions\n      );\n\n      if (authResponse.ok) {\n        const authData = await authResponse.json(); // Извлекаем данные из ответа как объект\n        const authToken = authData.token; // Извлекаем значение токена из объекта\n        return authToken;\n      } else {\n        console.error(\"Failed to authenticate user:\", authResponse.status);\n        // Возможно, здесь стоит бросить ошибку или выполнить другие действия в зависимости от вашего потока управления\n      }\n    } catch (error) {\n      console.error(\"Error during user authentication:\", error);\n      // То же самое - обработайте ошибку в соответствии с вашими потребностями\n    }\n  };\n  ////////////////////////////////////////////////////////\n\n  const [withdrawalRequestValue, setWithdrawalRequestValue] = useState(\"\");\n  const [selectedPaymentMethod, setSelectedPaymentMethod] =\n    useState(\"USDTTRC20\");\n  const [minimumAmount, setMinimumAmount] = useState();\n\n  // const handleAmountChange = (e) => {\n  //   const enteredValue = parseFloat(e.target.value);\n  //   setWithdrawalRequestValue(enteredValue);\n  //   handleEstimatedRequest(enteredValue);\n  // };\n\n  // const handlePaymentMethodChange = (event) => {\n  //   setSelectedPaymentMethod(event.target.value);\n  //   setErrorWallet(false);\n\n  //   // handleEstimatedRequest(); // Уберите эту строку\n  // };\n\n  // const handleInputChange = (value) => {\n  //   setWithdrawalRequestValue(value);\n  // };\n\n  const handlePaymentMethodChange = (event) => {\n    setSelectedPaymentMethod(event.target.value);\n    setErrorWallet(false);\n  };\n\n\n  useEffect(() => {\n    handleEstimatedRequest(withdrawalRequestValue); // Используйте текущее значение withdrawalRequestValue\n  }, [selectedPaymentMethod, withdrawalRequestValue]);\n\n  const [estimated, setEstimated] = useState([]);\n\n  ///////////////////////КОНВЕРТАЦИЯ//////////////////////\n  const handleEstimatedRequest = async () => {\n    try {\n      // Значения переменных\n      const currency_from = \"usd\"; // Замените на соответствующую валюту отправления\n      const currency_to = selectedPaymentMethod; // Замените на соответствующую валюту получения\n      const amount = withdrawalRequestValue; // Используем актуальное значение withdrawalRequestValue\n\n      // Формируем URL с параметрами\n      const url = `https://pickbonus.myawardwallet.com/api/payment/estimated.php?amount=${amount}&currency_from=${currency_from}&currency_to=${currency_to}`;\n\n      const response = await fetch(url);\n\n      if (response.ok) {\n        const result = await response.json();\n        // Обработка успешного ответа\n        console.log(result);\n        setEstimated(result);\n      } else {\n        // Обработка ошибки\n        console.error(`Request failed with status ${response.status}`);\n      }\n    } catch (error) {\n      // Обработка ошибок в случае неудачи запроса\n      console.error(\"An error occurred during the request:\", error);\n    }\n  };\n  //////////////////////////////////////////////\n\n  //МИНИМАЛЬНЫЙ ВЫВОД //\n  useEffect(() => {\n    const getMinAmount = async () => {\n      try {\n        const response = await fetch(\n          `https://pickbonus.myawardwallet.com/api/payment/minamount.php?currency=${selectedPaymentMethod}`\n        );\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n\n        const result = await response.json();\n        setMinimumAmount(result);\n        console.log(\"======\", result);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    getMinAmount();\n  }, [selectedPaymentMethod]);\n\n  ////////////////////////////////////\n\n  ////////////////КОМИССИЯ ЗА ВЫВОД/////////////////////////\n\n  useEffect(() => {\n    const fee = async () => {\n      try {\n        // Проверяем, установлено ли значение withdrawalRequestValue\n        if (withdrawalRequestValue !== undefined) {\n          const myHeaders = new Headers();\n          myHeaders.append(\"x-api-key\", \"MG5SRC6-HFBMACK-MMSR9QW-1EST6QC\");\n\n          const requestOptions = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\",\n          };\n\n          const response = await fetch(\n            `https://api.nowpayments.io/v1/payout/fee?currency=${selectedPaymentMethod}&amount=${withdrawalRequestValue}`,\n            requestOptions\n          );\n\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n\n          const result = await response.json();\n          console.log(result);\n          setMinFee(result);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    fee();\n  }, [selectedPaymentMethod, withdrawalRequestValue]);\n\n  ///////////////////////////////////////////////////////////////\n\n \n  const [modalPayout, setModalPayout] = useState(false);\n  const [modalError, setModalError] = useState(false);\n  const [errorMin, setErrorMin] = useState(true);\n\n  const modalPay = async () => {\n    handleEstimatedRequest();\n    setModalPayout(!modalPayout);\n  };\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n\n  const handleAmountChange = (e) => {\n    const enteredValue = parseFloat(e.target.value.trim()); // Убираем пробелы в начале и в конце\n  \n    setWithdrawalRequestValue(e.target.value);\n  \n    if (isNaN(enteredValue) || enteredValue < 4) {\n      setErrorMin(true);\n      setErrorMessage(\n        t(\"Withdrawal rejected: Minimum withdrawal amount is 4 USD.\")\n      );\n    } else if (enteredValue > user.balance) {\n      setErrorMin(true);\n      setErrorMessage(t(\"Not enough funds in the account.\"));\n    } else {\n      setErrorMin(false);\n      setErrorMessage(\"\");\n    }\n  };\n  \n\n\n  return (\n    <div className=\"withdrawal\">\n    \n      <div className=\"top-block\">\n        <h2>{t(\"Withdrawal\")}</h2>\n      </div>\n      <div className=\"ui-methods\">\n        <div className=\"container flex\">\n          <div className=\"menu\">\n            <div\n              className={`menu-item active`}\n          \n            >\n              {t(\"Withdrawal Request\")}\n            </div>\n          </div>\n          <div className=\"menu-info\">\n         \n              <div className=\"flex menu-content\">\n                <h4>{t(\"Withdrawal Requests\")}</h4>\n                <div className=\"all-balance\">\n                  <p>\n                    <span>{user.login}</span> {t(\"your current balance is:\")}\n                  </p>\n                  {Object.keys(user).length > 0 && (\n                    <div className=\"balance\">\n                      <span>{user.balance} USD</span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"withdrawal-form\">\n                  <div className=\"column\">\n                    <label htmlFor=\"method\">{t(\"Select Payment Method\")}</label>\n                  \n                    {coins && (\n                      <Select\n                        options={Object.values(coins.selectedCurrencies).map(\n                          (item) => ({\n                            value: item,\n                            label: (\n                              <div className=\"option-select\">\n                                <img\n                                  src={`./${item}.png`} // Замените на путь к вашим изображениям\n                                  alt={item}\n                                  style={{ width: \"24px\", marginRight: \"8px\" }}\n                                />\n                                {item}\n                              </div>\n                            ),\n                          })\n                        )}\n                        value={{\n                          value: selectedPaymentMethod,\n                          label: (\n                            <div className=\"option-select\">\n                              <img\n                                src={`./${selectedPaymentMethod}.png`} // Замените на путь к вашим изображениям\n                                alt={selectedPaymentMethod}\n                                style={{ width: \"24px\", marginRight: \"8px\" }}\n                              />\n                              {selectedPaymentMethod}\n                            </div>\n                          ),\n                        }}\n                        onChange={(selectedOption) =>\n                          handlePaymentMethodChange({\n                            target: { value: selectedOption.value },\n                          })\n                        }\n                        isSearchable={false}\n                        styles={{\n                          control: (provided) => ({\n                            ...provided,\n                            borderRadius: \"7px\",\n                            maxHeight: \"36px\",\n                            minWidth: \"226px\",\n                          }),\n                        }}\n                      />\n                    )}\n                  </div>\n                  {selectedPaymentMethod && (\n                    <div className=\"column\">\n                      <label htmlFor=\"amount\">{t(\"Amount\")} USD</label>\n                      <input\n                        type=\"number\"\n                        name=\"amount\"\n                        id=\"amount\"\n                        placeholder=\"0\"\n                        required=\"\"\n                        value={withdrawalRequestValue}\n                        onChange={(e) => {\n                          handleAmountChange(e);\n                        }}\n                        className={errorMin ? \"error\" : \"\"}\n                      />\n                      {errorMin && (\n                        <span className=\"mesSpan error-span\">\n                          {errorMessage}\n                        </span>\n                      )}\n                    </div>\n                  )}\n\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={modalPay}\n                    disabled={errorMin}\n                  >\n                    {t(\"Payout\")}\n                  </button>\n\n                  {modalPayout && (\n                    <div className=\"overflow\">\n                      <div className=\"modal\">\n                        {loading && <LoaderMini />}\n                        <div\n                          className=\"close\"\n                          onClick={() => setModalPayout(!modalPayout)}\n                        >\n                          {\" \"}\n                          <svg\n                            width=\"32\"\n                            height=\"32\"\n                            viewBox=\"0 0 32 32\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path\n                              d=\"M8.44487 24L24 8.02771M8 8L23.5551 23.9723\"\n                              stroke=\"#15143D\"\n                              strokeWidth=\"2.8\"\n                              strokeLinecap=\"round\"\n                            />\n                          </svg>\n                        </div>\n                        <div className=\"column\">\n                          <p>\n                            {t(\"Withdrawal commission:\")}{\" \"}\n                            {minFee.fee.toFixed(6).replace(/\\.?0+$/, \"\")}{\" \"}\n                            {estimated.currency_to}. <br></br>\n                            {t(\"You will receive\")}{\" \"}\n                            {(estimated.estimated_amount - minFee.fee)\n                              .toFixed(6)\n                              .replace(/\\.?0+$/, \"\")}{\" \"}\n                            {estimated.currency_to} {t(\"in your wallet.\")}\n                            <br></br>\n                            {t(\n                              \"Enter your wallet details and click ‘Withdraw Funds’\"\n                            )}\n                          </p>\n                        </div>\n\n                        <div className=\"column\">\n                          <label htmlFor=\"wallet\">\n                            {t(\"Wallet Address\")} {selectedPaymentMethod}\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"wallet\"\n                            id=\"wallet\"\n                            placeholder=\"Enter wallet address\"\n                            required=\"\"\n                            className={`column-input ${\n                              errorWallet ? \"error\" : \"\"\n                            }`}\n                            onChange={(e) => setAdressPayment(e.target.value)}\n                          />\n                          {errorWallet && (\n                            <span className=\"error-span\">\n                              {t(\"Your address is not valid\")}\n                            </span>\n                          )}\n                        </div>\n                        <button\n                          className=\"btn btn-primary btn-modal\"\n                          onClick={validateAddress}\n                        >\n                          {t(\"Send Request\")}\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {modalError && (\n                    <div className=\"overflow\">\n                      <div className=\"modal modal-success\">\n                        {loading && <LoaderMini />}\n                        <h3>{errorMin}</h3>\n                        <button\n                          className=\"btn btn-primary\"\n                          onClick={() => setModalError(!modalError)}\n                        >\n                          OK\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n         \n          </div>\n        </div>\n      </div>\n    \n    </div>\n  );\n}\nexport default Withdraw;\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;AAYA,MAAM,WAAW;;IACf,MAAM,EAAE,CAAC,EAAE,GAAG;IAOd,MAAM,CAAC,eAAe,iBAAiB,GAAG,0KAAS;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,0KAAS;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,0KAAS,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,0KAAS;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,0KAAS;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,0KAAS;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,0KAAS;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,0KAAS;IAC/C,0DAA0D;IAC1D,MAAM,CAAC,QAAQ,UAAU,GAAG,0KAAS;IAErC,MAAM,CAAC,OAAO,SAAS,GAAG,0KAAS;IAEnC,MAAM,CAAC,SAAS,WAAW,GAAG,0KAAS;IAEvC,MAAM,MAAM;IACZ,MAAM,SAAS;IAEf,2KAAU;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;gBAC5D,MAAM,cAAc,UAAU,GAAG,CAAC;gBAClC,MAAM,MAAM,MAAM,MAAM,CAAC,EAAE,IAAI,sBAAsB,EAAE,YAAY,CAAC;gBACpE,IAAI,IAAI,EAAE,EAAE;oBACV,MAAM,WAAW,MAAM,IAAI,IAAI;oBAC/B,QAAQ;gBACV,OAAO;oBACL,QAAQ,KAAK,CAAC,8BAA8B,IAAI,MAAM;gBACxD;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+CAA+C;YAC/D;QACF;QAEA,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,YAAY,IAAI;gBACtB,UAAU,MAAM,CAAC,aAAa;gBAE9B,MAAM,iBAAiB;oBACrB,QAAQ;oBACR,SAAS;oBACT,UAAU;gBACZ;gBAEA,MAAM,WAAW,MAAM,MACrB,gDACA;gBAGF,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,SAAS,MAAM,SAAS,IAAI;oBAClC,SAAS;gBACX,OAAO;oBACL,QAAQ,KAAK,CAAC,+BAA+B,SAAS,MAAM;gBAC5D,kBAAkB;gBACpB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gDAAgD;YAC9D,kBAAkB;YACpB;QACF;QAEA;QACA;IACF,GAAG;QAAC;KAAI;IAGR,kFAAkF;IAClF,MAAM,kBAAkB;QACtB,IAAI;YACF,MAAM,MAAM;YACZ,MAAM,WAAW;YACjB,MAAM,UAAU;YAEhB,MAAM,YAAY,IAAI;YACtB,UAAU,MAAM,CAAC,aAAa;YAC9B,UAAU,MAAM,CAAC,gBAAgB;YAEjC,MAAM,OAAO;gBACX,SAAS;gBACT,UAAU;YACZ;YAEA,MAAM,iBAAiB;gBACrB,QAAQ;gBACR,SAAS;gBACT,MAAM,KAAK,SAAS,CAAC;gBACrB,UAAU;YACZ;YAEA,MAAM,WAAW,MAAM,MAAM,KAAK;YAElC,IAAI,SAAS,EAAE,EAAE;gBACf,eAAe;gBACf;YACF,OAAO;gBACL,QAAQ,KAAK,CAAC,+BAA+B,SAAS,MAAM;gBAC5D,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,QAAQ,GAAG,CAAC,kBAAkB;gBAC9B,eAAe;YACjB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gDAAgD;YAC9D,eAAe;QACjB;IACF;IACA,uEAAuE;IAEvE,MAAM,eACJ,iFAAiF;IAEjF;IAEF,MAAM,sBAAsB;QAC1B,IAAI;YACF,WAAW;YACX,MAAM,SAAS;YACf,MAAM,WAAW,MAAM,oBAAoB,6CAA6C;YACxF,QAAQ,GAAG,CAAC,OAAO;YAEnB,MAAM,YAAY,IAAI;YACtB,UAAU,MAAM,CAAC,aAAa;YAC9B,UAAU,MAAM,CAAC,gBAAgB;YACjC,UAAU,MAAM,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC;YAEtD,MAAM,aAAa;gBACjB,kBAAkB;gBAClB,aAAa;oBACX;wBACE,SAAS;wBACT,UAAU;wBACV,QAAQ,WAAW,UAAU,gBAAgB;wBAC7C,kBAAkB;wBAClB,UAAU;wBACV,cAAc;oBAChB;iBACD;YACH;YACA,QAAQ,GAAG,CAAC,QAAQ;YAEpB,MAAM,iBAAiB;gBACrB,QAAQ;gBACR,SAAS;gBACT,MAAM,KAAK,SAAS,CAAC;oBAAE,GAAG,UAAU;gBAAC;gBACrC,UAAU;YACZ;YAEA,MAAM,WAAW,MAAM,MAAM,cAAc;YAE3C,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,SAAS,MAAM,SAAS,IAAI;gBAElC,YAAY,EAAE;gBAEd,cAAc,CAAC;gBACf,eAAe,CAAC;YAClB,OAAO;gBACL,IAAI,SAAS,MAAM,KAAK,KAAK;oBAC3B,MAAM,SAAS,MAAM,SAAS,IAAI;oBAClC,QAAQ,KAAK,CAAC,kCAAkC,OAAO,KAAK;oBAC5D,6DAA6D;oBAC7D,kBAAkB;oBAClB,iCAAiC;oBACjC,WAAW,OAAO,KAAK;gBACzB,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;oBAClC,QAAQ,KAAK,CACX,kCACA;oBAEF,kEAAkE;oBAClE,kBAAkB;oBAClB,4CAA4C;oBAC5C,aAAa;oBACb,WAAW;gBACb,OAAO;oBACL,QAAQ,KAAK,CAAC,kCAAkC,SAAS,MAAM;oBAC/D,kBAAkB;oBAClB,aAAa;oBAEb,WAAW,CAAC,OAAO,EAAE,SAAS,MAAM,CAAC,CAAC;gBACxC;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,kBAAkB;YAClB,aAAa;YACb,WAAW;QACb,SAAU;YACR,WAAW,QAAQ,yDAAyD;QAC9E;IACF;IACA,uDAAuD;IAEvD,iDAAiD;IAEjD,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,YAAY,IAAI;YACtB,UAAU,MAAM,CAAC,gBAAgB;YAEjC,MAAM,MAAM,KAAK,SAAS,CAAC;gBACzB,OAAO;gBACP,UAAU;YACZ;YAEA,MAAM,iBAAiB;gBACrB,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,UAAU;YACZ;YAEA,MAAM,eAAe,MAAM,MACzB,sCACA;YAGF,IAAI,aAAa,EAAE,EAAE;gBACnB,MAAM,WAAW,MAAM,aAAa,IAAI,IAAI,wCAAwC;gBACpF,MAAM,YAAY,SAAS,KAAK,EAAE,uCAAuC;gBACzE,OAAO;YACT,OAAO;gBACL,QAAQ,KAAK,CAAC,gCAAgC,aAAa,MAAM;YACjE,+GAA+G;YACjH;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,yEAAyE;QAC3E;IACF;IACA,wDAAwD;IAExD,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,0KAAS;IACrE,MAAM,CAAC,uBAAuB,yBAAyB,GACrD,0KAAS;IACX,MAAM,CAAC,eAAe,iBAAiB,GAAG;IAE1C,sCAAsC;IACtC,qDAAqD;IACrD,6CAA6C;IAC7C,0CAA0C;IAC1C,KAAK;IAEL,iDAAiD;IACjD,kDAAkD;IAClD,2BAA2B;IAE3B,uDAAuD;IACvD,KAAK;IAEL,yCAAyC;IACzC,sCAAsC;IACtC,KAAK;IAEL,MAAM,4BAA4B,CAAC;QACjC,yBAAyB,MAAM,MAAM,CAAC,KAAK;QAC3C,eAAe;IACjB;IAGA,2KAAU;QACR,uBAAuB,yBAAyB,sDAAsD;IACxG,GAAG;QAAC;QAAuB;KAAuB;IAElD,MAAM,CAAC,WAAW,aAAa,GAAG,0KAAS,EAAE;IAE7C,wDAAwD;IACxD,MAAM,yBAAyB;QAC7B,IAAI;YACF,sBAAsB;YACtB,MAAM,gBAAgB,OAAO,iDAAiD;YAC9E,MAAM,cAAc,uBAAuB,+CAA+C;YAC1F,MAAM,SAAS,wBAAwB,wDAAwD;YAE/F,8BAA8B;YAC9B,MAAM,MAAM,CAAC,qEAAqE,EAAE,OAAO,eAAe,EAAE,cAAc,aAAa,EAAE,YAAY,CAAC;YAEtJ,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,6BAA6B;gBAC7B,QAAQ,GAAG,CAAC;gBACZ,aAAa;YACf,OAAO;gBACL,mBAAmB;gBACnB,QAAQ,KAAK,CAAC,CAAC,2BAA2B,EAAE,SAAS,MAAM,CAAC,CAAC;YAC/D;QACF,EAAE,OAAO,OAAO;YACd,4CAA4C;YAC5C,QAAQ,KAAK,CAAC,yCAAyC;QACzD;IACF;IACA,8CAA8C;IAE9C,sBAAsB;IACtB,2KAAU;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,WAAW,MAAM,MACrB,CAAC,uEAAuE,EAAE,sBAAsB,CAAC;gBAEnG,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,iBAAiB;gBACjB,QAAQ,GAAG,CAAC,UAAU;YACxB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,UAAU;YAC1B;QACF;QAEA;IACF,GAAG;QAAC;KAAsB;IAE1B,oCAAoC;IAEpC,0DAA0D;IAE1D,2KAAU;QACR,MAAM,MAAM;YACV,IAAI;gBACF,4DAA4D;gBAC5D,IAAI,2BAA2B,WAAW;oBACxC,MAAM,YAAY,IAAI;oBACtB,UAAU,MAAM,CAAC,aAAa;oBAE9B,MAAM,iBAAiB;wBACrB,QAAQ;wBACR,SAAS;wBACT,UAAU;oBACZ;oBAEA,MAAM,WAAW,MAAM,MACrB,CAAC,kDAAkD,EAAE,sBAAsB,QAAQ,EAAE,uBAAuB,CAAC,EAC7G;oBAGF,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,SAAS,MAAM,SAAS,IAAI;oBAClC,QAAQ,GAAG,CAAC;oBACZ,UAAU;gBACZ;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,UAAU;YAC1B;QACF;QAEA;IACF,GAAG;QAAC;QAAuB;KAAuB;IAElD,+DAA+D;IAG/D,MAAM,CAAC,aAAa,eAAe,GAAG,0KAAS;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,0KAAS;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,0KAAS;IAEzC,MAAM,WAAW;QACf;QACA,eAAe,CAAC;IAClB;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,0KAAS;IAGjD,MAAM,qBAAqB,CAAC;QAC1B,MAAM,eAAe,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,qCAAqC;QAE7F,0BAA0B,EAAE,MAAM,CAAC,KAAK;QAExC,IAAI,MAAM,iBAAiB,eAAe,GAAG;YAC3C,YAAY;YACZ,gBACE,EAAE;QAEN,OAAO,IAAI,eAAe,KAAK,OAAO,EAAE;YACtC,YAAY;YACZ,gBAAgB,EAAE;QACpB,OAAO;YACL,YAAY;YACZ,gBAAgB;QAClB;IACF;IAIA,qBACE,wLAAC;QAAI,WAAU;;0BAEb,wLAAC;gBAAI,WAAU;0BACb,cAAA,wLAAC;8BAAI,EAAE;;;;;;;;;;;0BAET,wLAAC;gBAAI,WAAU;0BACb,cAAA,wLAAC;oBAAI,WAAU;;sCACb,wLAAC;4BAAI,WAAU;sCACb,cAAA,wLAAC;gCACC,WAAW,CAAC,gBAAgB,CAAC;0CAG5B,EAAE;;;;;;;;;;;sCAGP,wLAAC;4BAAI,WAAU;sCAEX,cAAA,wLAAC;gCAAI,WAAU;;kDACb,wLAAC;kDAAI,EAAE;;;;;;kDACP,wLAAC;wCAAI,WAAU;;0DACb,wLAAC;;kEACC,wLAAC;kEAAM,KAAK,KAAK;;;;;;oDAAQ;oDAAE,EAAE;;;;;;;4CAE9B,OAAO,IAAI,CAAC,MAAM,MAAM,GAAG,mBAC1B,wLAAC;gDAAI,WAAU;0DACb,cAAA,wLAAC;;wDAAM,KAAK,OAAO;wDAAC;;;;;;;;;;;;;;;;;;kDAI1B,wLAAC;wCAAI,WAAU;;0DACb,wLAAC;gDAAI,WAAU;;kEACb,wLAAC;wDAAM,SAAQ;kEAAU,EAAE;;;;;;oDAE1B,uBACC;wDACE,SAAS,OAAO,MAAM,CAAC,MAAM,kBAAkB,EAAE,GAAG,CAClD,CAAC,OAAS,CAAC;gEACT,OAAO;gEACP,qBACE,wLAAC;oEAAI,WAAU;;sFACb,wLAAC;4EACC,KAAK,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC;4EACpB,KAAK;4EACL,OAAO;gFAAE,OAAO;gFAAQ,aAAa;4EAAM;;;;;;wEAE5C;;;;;;;4DAGP,CAAC;wDAEH,OAAO;4DACL,OAAO;4DACP,qBACE,wLAAC;gEAAI,WAAU;;kFACb,wLAAC;wEACC,KAAK,CAAC,EAAE,EAAE,sBAAsB,IAAI,CAAC;wEACrC,KAAK;wEACL,OAAO;4EAAE,OAAO;4EAAQ,aAAa;wEAAM;;;;;;oEAE5C;;;;;;;wDAGP;wDACA,UAAU,CAAC,iBACT,0BAA0B;gEACxB,QAAQ;oEAAE,OAAO,eAAe,KAAK;gEAAC;4DACxC;wDAEF,cAAc;wDACd,QAAQ;4DACN,SAAS,CAAC,WAAa,CAAC;oEACtB,GAAG,QAAQ;oEACX,cAAc;oEACd,WAAW;oEACX,UAAU;gEACZ,CAAC;wDACH;;;;;;;;;;;;4CAIL,uCACC,wLAAC;gDAAI,WAAU;;kEACb,wLAAC;wDAAM,SAAQ;;4DAAU,EAAE;4DAAU;;;;;;;kEACrC,wLAAC;wDACC,MAAK;wDACL,MAAK;wDACL,IAAG;wDACH,aAAY;wDACZ,UAAS;wDACT,OAAO;wDACP,UAAU,CAAC;4DACT,mBAAmB;wDACrB;wDACA,WAAW,WAAW,UAAU;;;;;;oDAEjC,0BACC,wLAAC;wDAAK,WAAU;kEACb;;;;;;;;;;;;0DAMT,wLAAC;gDACC,WAAU;gDACV,SAAS;gDACT,UAAU;0DAET,EAAE;;;;;;4CAGJ,6BACC,wLAAC;gDAAI,WAAU;0DACb,cAAA,wLAAC;oDAAI,WAAU;;wDACZ,yBAAW;;;;;sEACZ,wLAAC;4DACC,WAAU;4DACV,SAAS,IAAM,eAAe,CAAC;;gEAE9B;8EACD,wLAAC;oEACC,OAAM;oEACN,QAAO;oEACP,SAAQ;oEACR,MAAK;oEACL,OAAM;8EAEN,cAAA,wLAAC;wEACC,GAAE;wEACF,QAAO;wEACP,aAAY;wEACZ,eAAc;;;;;;;;;;;;;;;;;sEAIpB,wLAAC;4DAAI,WAAU;sEACb,cAAA,wLAAC;;oEACE,EAAE;oEAA2B;oEAC7B,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,UAAU;oEAAK;oEAC7C,UAAU,WAAW;oEAAC;kFAAE,wLAAC;;;;;oEACzB,EAAE;oEAAqB;oEACvB,CAAC,UAAU,gBAAgB,GAAG,OAAO,GAAG,EACtC,OAAO,CAAC,GACR,OAAO,CAAC,UAAU;oEAAK;oEACzB,UAAU,WAAW;oEAAC;oEAAE,EAAE;kFAC3B,wLAAC;;;;;oEACA,EACC;;;;;;;;;;;;sEAKN,wLAAC;4DAAI,WAAU;;8EACb,wLAAC;oEAAM,SAAQ;;wEACZ,EAAE;wEAAkB;wEAAE;;;;;;;8EAEzB,wLAAC;oEACC,MAAK;oEACL,MAAK;oEACL,IAAG;oEACH,aAAY;oEACZ,UAAS;oEACT,WAAW,CAAC,aAAa,EACvB,cAAc,UAAU,GACzB,CAAC;oEACF,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;gEAEjD,6BACC,wLAAC;oEAAK,WAAU;8EACb,EAAE;;;;;;;;;;;;sEAIT,wLAAC;4DACC,WAAU;4DACV,SAAS;sEAER,EAAE;;;;;;;;;;;;;;;;;4CAKV,4BACC,wLAAC;gDAAI,WAAU;0DACb,cAAA,wLAAC;oDAAI,WAAU;;wDACZ,yBAAW;;;;;sEACZ,wLAAC;sEAAI;;;;;;sEACL,wLAAC;4DACC,WAAU;4DACV,SAAS,IAAM,cAAc,CAAC;sEAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAezB;GAhmBM;;;;;KAAA;uCAimBS"}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}